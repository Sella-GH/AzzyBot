name: Update DSharpPlus Nightly version

on:
  push:
    paths:
      - "**update-dsp.yml"
  schedule:
    - cron: '0 */6 * * *'

jobs:
  CheckForUpdates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: dev-next

      - name: Extract current NuGet package version
        id: current_version
        run: |
          VERSION=$(grep -Po '(?<=<PackageReference Include="DSharpPlus" Version=")[^"]*' AzzyBot-Next/AzzyBot-Next.csproj)
          echo "Current package version is $VERSION"
          echo "CURRENT_VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Fetch the latest package version from NuGet
        id: nuget_version
        run: |
          # Fetch data from NuGet API and save to a JSON file
          curl -s "https://api.nuget.org/v3-flatcontainer/dsharpplus/index.json" -o nuget_data.json
          # Check if the JSON file contains any versions
          if jq .versions nuget_data.json | jq -e 'length > 0' > /dev/null; then
            # Extract the latest version
            LATEST_VERSION=$(jq -r '.versions[-2]' nuget_data.json)
            echo "Latest NuGet package version is $LATEST_VERSION"
            echo "NUGET_VERSION=$LATEST_VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "No versions found in the NuGet package data."
          fi

      - name: Check if PR was already created
        if: ${{ steps.current_version.outputs.CURRENT_VERSION != steps.nuget_version.outputs.NUGET_VERSION }}
        id: check_pr
        run: |
          PRS="$(gh pr list --search "Update DSharpPlus Nightly to ${{ steps.nuget_version.outputs.NUGET_VERSION }}")"
          echo "Found PRs: $PRS"
          if [ "$PRS" != '' ]; then
            echo "PR_CREATED=true" >> "$GITHUB_OUTPUT"
          else
            echo "PR_CREATED=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update .csproj file if versions differ
        if: ${{ steps.check_pr.outputs.PR_CREATED != 'true' && steps.current_version.outputs.CURRENT_VERSION != steps.nuget_version.outputs.NUGET_VERSION }}
        run: |
          sed -i 's/<PackageReference Include="DSharpPlus" Version="'${{ steps.current_version.outputs.CURRENT_VERSION }}'"/<PackageReference Include="DSharpPlus" Version="'${{ steps.nuget_version.outputs.NUGET_VERSION }}'"/' AzzyBot-Next/AzzyBot-Next.csproj
          sed -i 's/<PackageReference Include="DSharpPlus.Commands" Version="'${{ steps.current_version.outputs.CURRENT_VERSION }}'"/<PackageReference Include="DSharpPlus.Commands" Version="'${{ steps.nuget_version.outputs.NUGET_VERSION }}'"/' AzzyBot-Next/AzzyBot-Next.csproj

      - name: Commit and push if there was a change
        if: ${{ steps.check_pr.outputs.PR_CREATED != 'true' && steps.current_version.outputs.CURRENT_VERSION != steps.nuget_version.outputs.NUGET_VERSION }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --add --bool push.autoSetupRemote true
          git checkout -b actions/DspUpdate
          git add AzzyBot-Next/AzzyBot-Next.csproj
          git commit -m "Update DSharpPlus Nightly to ${{ steps.nuget_version.outputs.NUGET_VERSION }}"
          git push
          gh pr create -a "Sella-GH" -B "dev-next" -f -l "dev-next,dependencies,.NET" -m "2.0 Rewrite"
        env:
          GH_TOKEN: ${{ github.token }}
